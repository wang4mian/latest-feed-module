---
import DashboardLayout from '../layouts/DashboardLayout.astro';
import { getArticles } from '../lib/supabase';

// 临时：获取所有文章来调试
const { data: allArticles, error: allError } = await getArticles({
  limit: 50,
  sort: 'ai_score_desc'
});

// 获取用户已采用的文章（通过文章池点击"采用"按钮的文章）
const { data: adoptedArticles, error } = await getArticles({
  status: 'adopted',
  limit: 50,
  sort: 'ai_score_desc'
});

// 调试信息
console.log('编辑台 - 所有文章:', {
  count: allArticles?.length || 0,
  error: allError,
  statuses: allArticles?.map(a => a.overall_status) || []
});

console.log('编辑台 - 已通过文章查询结果:', {
  count: adoptedArticles?.length || 0,
  error: error,
  articles: adoptedArticles
});

// 格式化日期
const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('zh-CN', {
    month: 'short', 
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
};

// 获取分类显示文本
const getCategoryText = (category: string) => {
  const categoryMap: { [key: string]: string } = {
    'Core Equipment': '核心设备',
    'Supply Chain': '供应链', 
    'Market Trends': '市场趋势',
    'Technological Innovation': '技术创新',
    'Business Models': '商业模式'
  };
  return categoryMap[category] || category || '未分类';
};

// 获取评分颜色类 (现在使用 Tailwind)
const getScoreColor = (score: number) => {
  if (score >= 80) return 'text-green-600';
  if (score >= 60) return 'text-yellow-600';
  return 'text-gray-500';
};
---

<DashboardLayout title="编辑台 - KUATO">
  <!-- Page Header -->
  <div class="mb-6">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">编辑工作台</h1>
        <p class="mt-1 text-sm text-gray-500">
          KUATO AI智能内容创作平台 - 基于AI筛选文章创作深度情报内容
        </p>
      </div>
      <div class="flex items-center space-x-3">
        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
          </svg>
          {adoptedArticles?.length || 0} 篇已通过
        </span>
      </div>
    </div>
  </div>

  <!-- Two Column Layout -->
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 h-[calc(100vh-12rem)]">
    
    <!-- Left Column: Article List -->
    <div class="lg:col-span-1 bg-gray-50 rounded-lg border border-gray-200 flex flex-col">
      <div class="p-4 border-b border-gray-200">
        <!-- Header -->
        <div class="flex items-center justify-between mb-4">
          <h3 class="text-lg font-medium text-gray-900">已通过文章</h3>
          <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
            {adoptedArticles?.length || 0}
          </span>
        </div>
        
        <!-- Search Box -->
        <div class="relative">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <svg class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
          </div>
          <input 
            type="search" 
            placeholder="搜索文章标题..."
            class="block w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md leading-5 bg-white placeholder-gray-500 focus:outline-none focus:ring-1 focus:ring-blue-500 focus:border-blue-500 text-sm"
          />
        </div>
      </div>
      
      <!-- Article List -->
      <div class="flex-1 overflow-y-auto p-4 space-y-3">
        {adoptedArticles && adoptedArticles.length > 0 ? (
          adoptedArticles.map((article: any) => (
            <div class="bg-white rounded-lg border border-gray-200 p-4 hover:shadow-md transition-shadow cursor-pointer" 
                 data-article-id={article.id}>
              <!-- Score and Date -->
              <div class="flex items-center justify-between mb-2">
                <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-bold ${
                  (article.ai_score || 0) >= 80 ? 'bg-green-100 text-green-800' : 
                  (article.ai_score || 0) >= 60 ? 'bg-yellow-100 text-yellow-800' : 
                  'bg-gray-100 text-gray-800'
                }`}>
                  {article.ai_score || 0}
                </span>
                <span class="text-xs text-gray-500">
                  {formatDate(article.created_at)}
                </span>
              </div>
              
              <!-- Title -->
              <h4 class="text-sm font-medium text-gray-900 line-clamp-2 mb-2">
                {article.title}
              </h4>
              
              <!-- Meta Info -->
              <div class="flex items-center text-xs text-gray-500 mb-3 space-x-2">
                <span>{article.rss_sources?.name || '未知来源'}</span>
                {article.ai_category && (
                  <>
                    <span>•</span>
                    <span>{getCategoryText(article.ai_category)}</span>
                  </>
                )}
              </div>
              
              <!-- Actions -->
              <div class="flex space-x-2">
                <button class="inline-flex items-center px-3 py-1 text-xs font-medium text-white bg-blue-600 rounded hover:bg-blue-700 use-article" 
                        data-id={article.id}>
                  <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                  </svg>
                  使用文章
                </button>
                <button class="inline-flex items-center px-3 py-1 text-xs font-medium text-gray-700 bg-gray-100 rounded hover:bg-gray-200 view-original" 
                        data-url={article.link}>
                  <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                  查看原文
                </button>
              </div>
            </div>
          ))
        ) : (
          <div class="text-center py-12">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            <p class="mt-4 text-sm text-gray-500">暂无已通过的文章</p>
            <p class="text-xs text-gray-400">请先到文章池筛选通过一些文章</p>
          </div>
        )}
      </div>
    </div>

    <!-- Right Column: Doocs MD Editor -->
    <div class="lg:col-span-2 bg-white rounded-lg border border-gray-200 flex flex-col">
      
      <!-- Editor Header -->
      <div class="p-4 border-b border-gray-200">
        <div class="flex items-center justify-between mb-3">
          <div class="flex items-center text-gray-700">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
            </svg>
            <span class="font-medium">Doocs MD 编辑器</span>
          </div>
          <div class="flex items-center space-x-2">
            <button class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" id="refresh-editor">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
              </svg>
              刷新编辑器
            </button>
            <a class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" href="https://md.doocs.org/" target="_blank">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
              新窗口打开
            </a>
          </div>
        </div>
        
        <!-- Template Selector -->
        <div class="space-y-3">
          <div class="flex items-center space-x-3">
            <label class="text-sm font-medium text-gray-700">选择模板:</label>
            <select id="template-selector" class="text-sm border border-gray-300 rounded-md px-3 py-1.5 bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
              <option value="intelligence" selected>🧠 制造业情报分析 (推荐)</option>
              <optgroup label="📱 微信公众号模板">
                <option value="wechat-template1">模板1 (KUATO制造业情报)</option>
              </optgroup>
              <optgroup label="📋 分析报告模板">
                <option value="benchmark">🎯 中外对标分析</option>
                <option value="technology">🔬 技术创新跟踪</option>
                <option value="market">📈 市场动态分析</option>
                <option value="basic">📄 基础信息整理</option>
              </optgroup>
            </select>
            <button id="preview-template" class="text-xs px-2 py-1 bg-blue-50 text-blue-600 rounded border border-blue-200 hover:bg-blue-100">
              预览模板
            </button>
            <span class="text-xs text-gray-500">选择模板后点击"使用文章"生成内容</span>
          </div>
          
          <!-- Template Info -->
          <div id="template-info" class="text-xs text-gray-600 bg-blue-50 p-2 rounded" style="display: none;">
            <span id="template-info-content"></span>
          </div>
        </div>
        
        <!-- Style Preset Section -->
        <div class="border-t border-gray-200 pt-3 mt-3">
          <div class="space-y-3">
            <!-- Preset Selector -->
            <div class="flex items-center space-x-3">
              <label class="text-sm font-medium text-gray-700">🎨 样式预设:</label>
              <select id="style-preset-selector" class="text-sm border border-gray-300 rounded-md px-3 py-1.5 bg-white focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500">
                <option value="">选择预设样式</option>
                <optgroup label="🎨 默认样式">
                  <option value="kuato-default">KUATO 默认样式</option>
                </optgroup>
                <optgroup label="🏭 制造业">
                  <option value="commercial-robot-breakdown">商用机器人拆解局样式</option>
                </optgroup>
                <optgroup label="📱 微信公众号">
                  <option value="wechat-official">微信公众号样式</option>
                </optgroup>
              </select>
              <button id="apply-preset-style" class="text-xs px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 disabled:bg-gray-300 disabled:cursor-not-allowed" disabled>
                应用样式
              </button>
            </div>
            
            <!-- Preset Info -->
            <div id="preset-info" class="text-xs text-gray-600 bg-green-50 p-2 rounded" style="display: none;">
              <span id="preset-info-content"></span>
            </div>
            
            <!-- Advanced Options Toggle -->
            <div class="flex items-center justify-between">
              <span class="text-xs text-gray-500">或者导入自定义配置文件</span>
              <button id="toggle-style-import" class="text-xs px-2 py-1 bg-gray-50 text-gray-600 rounded border border-gray-200 hover:bg-gray-100">
                自定义导入
              </button>
            </div>
          </div>
          
          <!-- Style Import Panel (initially hidden) -->
          <div id="style-import-panel" class="hidden mt-3 p-3 bg-gray-50 rounded-md border border-gray-200">
            <div class="space-y-3">
              <div>
                <label class="block text-xs font-medium text-gray-800 mb-1">上传 Doocs MD 配置文件</label>
                <input 
                  type="file" 
                  id="style-config-file" 
                  accept=".json"
                  class="block w-full text-xs text-gray-500 file:mr-2 file:py-1 file:px-2 file:rounded file:border-0 file:text-xs file:font-medium file:bg-gray-100 file:text-gray-800 hover:file:bg-gray-200"
                />
                <p class="text-xs text-gray-600 mt-1">选择从 Doocs MD 导出的配置 JSON 文件</p>
              </div>
              
              <div class="flex space-x-2">
                <button id="apply-style-config" class="flex-1 text-xs px-3 py-1.5 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-300 disabled:cursor-not-allowed" disabled>
                  <svg class="w-3 h-3 mr-1 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                  </svg>
                  应用样式配置
                </button>
                <button id="preview-style-config" class="text-xs px-3 py-1.5 bg-gray-100 text-gray-700 rounded hover:bg-gray-200 disabled:bg-gray-300 disabled:cursor-not-allowed" disabled>
                  预览配置
                </button>
              </div>
              
              <!-- Style Config Preview -->
              <div id="style-config-preview" class="hidden mt-2 p-2 bg-white border border-gray-200 rounded text-xs">
                <div class="font-medium text-gray-800 mb-1">配置预览:</div>
                <div id="style-config-details" class="text-gray-600 space-y-1">
                  <!-- Config details will be shown here -->
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Article Images Panel -->
        <div id="images-panel" class="hidden mt-3 p-3 bg-green-50 rounded-md border border-green-200">
          <h4 class="text-sm font-medium text-green-800 mb-2 flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            文章配图 (点击插入)
          </h4>
          <div id="images-list" class="space-y-1 max-h-32 overflow-y-auto">
            <!-- Images will be loaded here -->
          </div>
        </div>
      </div>
      
      <!-- Doocs MD iframe Editor -->
      <div class="flex-1 relative">
        <iframe 
          id="doocs-editor"
          src="https://md.doocs.org/"
          class="w-full h-full"
          style="border: none; background: white;"
          sandbox="allow-same-origin allow-scripts allow-forms allow-popups allow-top-navigation"
        ></iframe>
      </div>
      
      <!-- Editor Footer -->
      <div class="p-3 bg-gray-50 border-t border-gray-200 text-sm">
        <div class="flex items-center justify-between">
          <div class="flex items-center text-gray-600">
            <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
            </svg>
            <span>Doocs MD 开源编辑器 - 支持实时预览、主题切换、数学公式、微信公众号样式</span>
          </div>
          <div id="editor-status" class="flex items-center text-gray-500">
            <svg class="w-4 h-4 mr-1 animate-spin" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            编辑器加载中...
          </div>
        </div>
      </div>
      
    </div>
    
  </div>

</DashboardLayout>

<script>
  // 获取当前选择的模板
  function getSelectedTemplate(): string {
    const selector = document.getElementById('template-selector') as HTMLSelectElement;
    return selector ? selector.value : 'basic';
  }

  // 制造业情报分析模板 - 专业报告格式
  function generateIntelligenceTemplate(article: any): string {
    const date = new Date(article.created_at).toLocaleDateString('zh-CN');
    const reportDate = new Date().toLocaleDateString('zh-CN');
    
    return `# **智能制造行业研究**

## **${article.title}**

---

**发布机构**: KUATO制造业情报系统  
**报告日期**: ${reportDate}  
**信息来源**: ${article.rss_sources?.name || '未知'}  
**AI评分**: ${article.ai_score || 'N/A'}/100  

---

### **一、事件概述**

${article.ai_summary || '[ 请补充事件概述 ]'}

### **二、核心观点解读**

**2.1 技术亮点**
- 核心创新: [ 待分析 ]
- 技术突破: [ 待分析 ]
- 应用价值: [ 待分析 ]

**2.2 市场影响**
- 市场规模: [ 待分析 ]
- 竞争格局: [ 待分析 ]
- 发展趋势: [ 待分析 ]

### **三、深度分析**

**3.1 国外案例研究**

${article.full_content || article.description || '[ 请补充国外案例详情 ]'}

**3.2 中国对标企业**

| 企业名称 | 技术水平 | 市场地位 | 竞争优势 |
|----------|----------|----------|----------|
| [ 企业A ] | [ 评估 ] | [ 地位 ] | [ 优势 ] |
| [ 企业B ] | [ 评估 ] | [ 地位 ] | [ 优势 ] |
| [ 企业C ] | [ 评估 ] | [ 地位 ] | [ 优势 ] |

### **四、战略意义评估**

${article.ai_strategic_implication || '[ 请补充战略意义分析 ]'}

**投资价值评估**:
- **技术创新**: ⭐⭐⭐⭐⭐
- **市场前景**: ⭐⭐⭐⭐⭐  
- **政策支持**: ⭐⭐⭐⭐⭐
- **风险控制**: ⭐⭐⭐⭐⭐

### **五、行业洞察与建议**

**5.1 行业发展趋势**
1. [ 趋势一 ]
2. [ 趋势二 ]
3. [ 趋势三 ]

**5.2 投资机会分析**
- **短期机会** (6个月内): [ 具体机会 ]
- **中期布局** (1-2年): [ 具体方向 ]
- **长期战略** (3-5年): [ 战略重点 ]

**5.3 风险提示**
- 技术风险: [ 风险分析 ]
- 市场风险: [ 风险分析 ]
- 政策风险: [ 风险分析 ]

---

### **六、结论与建议**

**核心结论**: [ 请基于以上分析得出核心结论 ]

**行动建议**:
1. **立即行动**: [ 具体建议 ]
2. **密切关注**: [ 关注重点 ]
3. **长期布局**: [ 布局方向 ]

---

**报告声明**: 本报告基于公开信息和AI智能分析，仅供参考。投资决策请结合具体情况谨慎考虑。

**数据来源**: ${article.link}  
**分析师**: KUATO AI智能分析系统  
**报告编号**: ${article.id?.substring(0, 8) || 'N/A'}`;
  }

  // 技术创新跟踪模板
  function generateTechnologyTemplate(article: any): string {
    const date = new Date(article.created_at).toLocaleDateString('zh-CN');
    
    return `# 🔬 技术创新跟踪报告

## ${article.title}

---

### 🆕 技术亮点

${article.ai_summary || ''}

### 🏭 技术分类
- **领域**: ${article.ai_category || '待分类'}
- **创新度**: ${article.ai_score || 'N/A'}/100
- **成熟度**: [ 实验室阶段 / 产品化 / 规模应用 ]

### 🔧 技术详解

${article.full_content || article.description || ''}

### 📊 技术评估

| 维度 | 评级 | 说明 |
|------|------|------|
| **技术突破性** | ⭐⭐⭐⭐⭐ | [ 评估说明 ] |
| **商业化潜力** | ⭐⭐⭐⭐⭐ | [ 评估说明 ] |
| **竞争优势** | ⭐⭐⭐⭐⭐ | [ 评估说明 ] |
| **投资价值** | ⭐⭐⭐⭐⭐ | [ 评估说明 ] |

### 🎯 应用前景

**潜在应用场景**：
- [ 场景1 ]
- [ 场景2 ]
- [ 场景3 ]

**市场预期**：
${article.ai_strategic_implication || '[ 待分析 ]'}

### 🔗 相关技术

- [ 相关技术1 ]
- [ 相关技术2 ]  
- [ 相关技术3 ]

---

**数据来源**: ${article.rss_sources?.name || '未知'} | ${date}`;
  }

  // 市场动态分析模板
  function generateMarketTemplate(article: any): string {
    const date = new Date(article.created_at).toLocaleDateString('zh-CN');
    
    return `# 📈 市场动态分析

## ${article.title}

---

### 📊 市场概况

${article.ai_summary || ''}

### 💰 市场数据

| 指标 | 数值 | 备注 |
|------|------|------|
| **市场规模** | [ 待填入 ] | [ 说明 ] |
| **增长率** | [ 待填入 ] | [ 说明 ] |
| **主要玩家** | [ 待填入 ] | [ 说明 ] |

### 🌊 市场趋势

${article.ai_strategic_implication || ''}

### 🏢 关键企业动态

${article.full_content || article.description || ''}

### 📋 SWOT分析

| 优势 (Strengths) | 劣势 (Weaknesses) |
|------------------|-------------------|
| • [ 优势1 ] | • [ 劣势1 ] |
| • [ 优势2 ] | • [ 劣势2 ] |

| 机会 (Opportunities) | 威胁 (Threats) |
|---------------------|----------------|
| • [ 机会1 ] | • [ 威胁1 ] |
| • [ 机会2 ] | • [ 威胁2 ] |

### 🎯 投资建议

**短期** (1-6个月):
- [ 建议1 ]

**中期** (6-18个月):  
- [ 建议2 ]

**长期** (2-5年):
- [ 建议3 ]

---

**分析师**: KUATO AI | **报告日期**: ${date}`;
  }

  // 中外对标分析模板 - 专业对标报告格式
  function generateBenchmarkTemplate(article: any): string {
    const date = new Date(article.created_at).toLocaleDateString('zh-CN');
    const reportDate = new Date().toLocaleDateString('zh-CN');
    
    return `# **中外制造业对标研究报告**

## **${article.title}**

---

**发布机构**: KUATO制造业情报系统  
**报告日期**: ${reportDate}  
**对标领域**: ${article.ai_category || '综合制造'}  
**分析评分**: ${article.ai_score || 'N/A'}/100  

---

### **执行摘要**

${article.ai_summary || '[ 请补充执行摘要 ]'}

---

### **一、国外标杆案例**

**1.1 案例概述**

${article.full_content || article.description || '[ 请补充国外案例详情 ]'}

**1.2 核心竞争力分析**
- **技术优势**: [ 分析技术领先性 ]
- **市场地位**: [ 分析市场占有率和影响力 ]  
- **商业模式**: [ 分析盈利模式和价值链 ]
- **创新能力**: [ 分析研发投入和创新机制 ]

### **二、中国企业对标分析**

**2.1 对标企业概览**

| 中国企业 | 业务领域 | 市场地位 | 技术水平 | 发展阶段 |
|----------|----------|----------|----------|----------|
| [ 企业A ] | [ 领域 ] | [ 地位 ] | [ 水平 ] | [ 阶段 ] |
| [ 企业B ] | [ 领域 ] | [ 地位 ] | [ 水平 ] | [ 阶段 ] |
| [ 企业C ] | [ 领域 ] | [ 地位 ] | [ 水平 ] | [ 阶段 ] |

**2.2 核心差距分析**

| 对比维度 | 国外标杆 | 中国企业 | 差距程度 | 追赶难度 |
|----------|----------|----------|----------|----------|
| **技术研发** | [ 评估 ] | [ 评估 ] | [ 差距 ] | [ 难度 ] |
| **市场规模** | [ 评估 ] | [ 评估 ] | [ 差距 ] | [ 难度 ] |
| **资本实力** | [ 评估 ] | [ 评估 ] | [ 差距 ] | [ 难度 ] |
| **人才储备** | [ 评估 ] | [ 评估 ] | [ 差距 ] | [ 难度 ] |
| **产业生态** | [ 评估 ] | [ 评估 ] | [ 差距 ] | [ 难度 ] |

### **三、竞争态势与趋势**

**3.1 全球竞争格局**

${article.ai_strategic_implication || '[ 请补充竞争态势分析 ]'}

**3.2 发展趋势预判**
1. **技术发展趋势**: [ 趋势分析 ]
2. **市场演变趋势**: [ 趋势分析 ]
3. **政策环境趋势**: [ 趋势分析 ]

### **四、政策环境对比**

**4.1 国外政策支持**
- 研发扶持: [ 政策内容 ]
- 产业引导: [ 政策内容 ]
- 市场保护: [ 政策内容 ]

**4.2 中国政策机遇**
- 国家战略: [ 政策机遇 ]
- 产业政策: [ 政策机遇 ]
- 区域优势: [ 政策机遇 ]

### **五、追赶策略建议**

**5.1 技术突破路径**
1. **短期** (1年内): [ 具体策略 ]
2. **中期** (2-3年): [ 具体策略 ]
3. **长期** (5年内): [ 具体策略 ]

**5.2 市场突破策略**
- **国内市场**: [ 策略建议 ]
- **海外拓展**: [ 策略建议 ]
- **细分领域**: [ 策略建议 ]

**5.3 生态建设方案**
- **产业链整合**: [ 建设方案 ]
- **创新平台**: [ 建设方案 ]
- **人才培养**: [ 建设方案 ]

### **六、投资机会与风险**

**6.1 投资机会**
- **技术投资**: [ 机会分析 ]
- **产业投资**: [ 机会分析 ]
- **并购整合**: [ 机会分析 ]

**6.2 风险提示**
- **技术风险**: [ 风险分析 ]
- **市场风险**: [ 风险分析 ]
- **政策风险**: [ 风险分析 ]

---

### **结论与建议**

**核心结论**: [ 基于对标分析的核心结论 ]

**战略建议**:
1. **优先发展**: [ 重点领域 ]
2. **重点突破**: [ 关键技术 ]
3. **合作共赢**: [ 合作方向 ]

---

**免责声明**: 本报告基于公开信息整理分析，观点仅供参考，不构成投资建议。

**数据来源**: ${article.link}  
**研究团队**: KUATO制造业研究院  
**报告编号**: ${article.id?.substring(0, 8) || 'N/A'}`;
  }

  // 基础信息整理模板
  function generateBasicTemplate(article: any): string {
    const date = new Date(article.created_at).toLocaleDateString('zh-CN');
    
    let content = `# ${article.title}\n\n`;
    
    // 添加元信息
    content += `**来源**: ${article.rss_sources?.name || '未知'}\n`;
    content += `**发布时间**: ${date}\n`;
    if (article.ai_score) {
      content += `**AI评分**: ${article.ai_score}/100\n`;
    }
    if (article.ai_category) {
      content += `**分类**: ${article.ai_category}\n`;
    }
    content += `**原文链接**: [查看原文](${article.link})\n\n`;
    
    content += `---\n\n`;
    
    // 添加AI摘要
    if (article.ai_summary) {
      content += `## AI 摘要\n\n${article.ai_summary}\n\n`;
    }
    
    // 添加战略意义分析
    if (article.ai_strategic_implication) {
      content += `## 战略意义\n\n${article.ai_strategic_implication}\n\n`;
    }
    
    // 添加完整内容（如果有）
    if (article.full_content) {
      content += `## 完整内容\n\n${article.full_content}\n\n`;
    }
    
    content += `---\n\n`;
    content += `*此内容由制造业情报系统自动生成，基于文章: "${article.title}"*\n`;
    
    return content;
  }

  // 微信公众号模板配置
  const WECHAT_TEMPLATES = {
    'template1': {
      name: 'KUATO制造业情报',
      headerImage: '/kuato-logo.png', // 使用项目内的图片，避免微信防盗链
      footerImages: [
        '/kuato-logo.png', // 暂时使用相同的logo，避免微信防盗链
        '/kuato-logo.png'  // 后续可以添加其他footer图片
      ],
      brandName: 'KUATO制造业情报系统',
      description: '专注制造业情报分析'
    }
    // 未来可以添加更多模板
    // 'template2': { ... }
  };

  // 微信公众号模板1生成函数
  function generateWechatTemplate1(article: any): string {
    const date = new Date(article.created_at).toLocaleDateString('zh-CN');
    const template = WECHAT_TEMPLATES.template1;
    
    // 直接使用模板配置的题图
    const headerImageUrl = template.headerImage;
    
    return `<style>
/* 微信公众号样式 */
.rich_media_content {
  max-width: 677px;
  margin: 0 auto;
  padding: 20px;
  font-family: -apple-system-font, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei UI", "Microsoft YaHei", Arial, sans-serif;
  line-height: 1.6;
  color: #333;
  background-color: #fff;
}

.rich_media_title {
  font-size: 24px;
  font-weight: bold;
  line-height: 1.4;
  margin-bottom: 20px;
  text-align: center;
  color: #000;
}

.rich_media_meta {
  text-align: center;
  font-size: 14px;
  color: #888;
  margin-bottom: 30px;
  padding-bottom: 20px;
  border-bottom: 1px solid #eee;
}

.rich_media_para {
  margin-bottom: 20px;
  font-size: 16px;
  text-align: justify;
}

.rich_media_strong {
  font-weight: bold;
  color: #000;
}

.rich_media_quote {
  padding: 15px 20px;
  margin: 20px 0;
  background-color: #f7f7f7;
  border-left: 4px solid #07c160;
  font-style: italic;
}

.rich_media_section {
  margin: 30px 0;
}

.rich_media_section_title {
  font-size: 18px;
  font-weight: bold;
  margin: 25px 0 15px 0;
  color: #000;
}

.rich_media_highlight {
  background-color: #fff2cc;
  padding: 2px 4px;
  border-radius: 3px;
}

.rich_media_header_image {
  width: 100%;
  max-width: 677px;
  height: 300px;
  object-fit: cover;
  border-radius: 8px;
  margin-bottom: 20px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.rich_media_footer {
  margin-top: 40px;
  padding-top: 20px;
  border-top: 1px solid #eee;
  text-align: center;
  font-size: 12px;
  color: #999;
}

.rich_media_footer_images {
  margin-top: 30px;
  text-align: center;
}

.rich_media_footer_image {
  width: 100%;
  max-width: 677px;
  margin: 10px 0;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}
</style>

<div class="rich_media_content">

<img src="${headerImageUrl}" alt="${article.title}" class="rich_media_header_image" />

<h1 class="rich_media_title">${article.title}</h1>

<div class="rich_media_meta">
<strong>${template.brandName}</strong> | ${date}<br>
来源：${article.rss_sources?.name || '未知'} | AI评分：${article.ai_score || 'N/A'}/100
</div>

<div class="rich_media_section">
<h2 class="rich_media_section_title">📊 核心观点</h2>
<div class="rich_media_para">
${article.ai_summary || ''}
</div>
</div>

${article.ai_strategic_implication ? `
<div class="rich_media_quote">
<strong>战略价值：</strong>${article.ai_strategic_implication}
</div>
` : ''}

<div class="rich_media_section">
<h2 class="rich_media_section_title">🔍 深度解读</h2>
<div class="rich_media_para">
${article.full_content || article.description || ''}
</div>
</div>

<div class="rich_media_section">
<h2 class="rich_media_section_title">💡 行业洞察</h2>
<div class="rich_media_para">
这一动态对制造业的启示：
</div>
<div class="rich_media_para">
• <span class="rich_media_strong">技术趋势</span>：[ 请补充技术发展趋势分析 ]
</div>
<div class="rich_media_para">
• <span class="rich_media_strong">市场机会</span>：[ 请补充市场机会分析 ]
</div>
<div class="rich_media_para">
• <span class="rich_media_strong">投资方向</span>：[ 请补充投资建议 ]
</div>
</div>

<div class="rich_media_section">
<h2 class="rich_media_section_title">🎯 关键要点</h2>
<div class="rich_media_para">
<span class="rich_media_highlight">核心技术</span>：[ 请提炼核心技术要点 ]
</div>
<div class="rich_media_para">
<span class="rich_media_highlight">应用场景</span>：[ 请分析主要应用场景 ]
</div>
<div class="rich_media_para">
<span class="rich_media_highlight">发展前景</span>：[ 请评估发展前景 ]
</div>
</div>

<div class="rich_media_footer">
<p>📖 更多制造业情报，关注 <strong>${template.brandName}</strong></p>
<p>🔗 原文链接：<a href="${article.link}" target="_blank">点击查看</a></p>
<p>⚡ 本文由AI智能分析生成，仅供参考</p>
</div>

<!-- 结尾图片 -->
<div class="rich_media_footer_images">
<img src="${template.footerImages[0]}" alt="${template.name} 关注二维码" class="rich_media_footer_image" />
<img src="${template.footerImages[1]}" alt="${template.name} 推广图" class="rich_media_footer_image" />
</div>

</div>`;
  }

  // 主生成函数 - 根据选择的模板生成内容
  function generateMarkdownContent(article: any): string {
    const template = getSelectedTemplate();
    
    switch (template) {
      case 'intelligence':
        return generateIntelligenceTemplate(article);
      case 'wechat-template1':
        return generateWechatTemplate1(article);
      case 'technology':
        return generateTechnologyTemplate(article);
      case 'market':
        return generateMarketTemplate(article);
      case 'benchmark':
        return generateBenchmarkTemplate(article);
      case 'basic':
      default:
        return generateBasicTemplate(article);
    }
  }

  // 插入内容到 Doocs MD 编辑器的函数
  function insertContentToEditor(content: string): boolean {
    const doocsIframe = document.getElementById('doocs-editor') as HTMLIFrameElement;
    
    if (!doocsIframe) {
      console.error('Doocs MD 编辑器未找到');
      return false;
    }
    
    try {
      // 通过 postMessage 发送内容到 Doocs MD
      const message = {
        type: 'INSERT_CONTENT',
        content: content,
        timestamp: Date.now()
      };
      
      console.log('正在向 Doocs MD 发送内容...', content.length, '字符');
      doocsIframe.contentWindow?.postMessage(message, 'https://md.doocs.org');
      
      // 同时复制到剪贴板作为备选方案
      navigator.clipboard.writeText(content).then(() => {
        console.log('✅ 内容已复制到剪贴板');
      }).catch(err => {
        console.log('剪贴板复制失败:', err);
      });
      
      // 显示使用说明
      showNotification('内容已发送到编辑器并复制到剪贴板，如需要请在编辑器中粘贴（Ctrl+V）', 'success');
      
      return true;
      
    } catch (error) {
      console.error('插入内容到 Doocs MD 失败:', error);
      return false;
    }
  }
  


  // JSON配置解析函数
  function parseDoocsMDConfig(configJson: any) {
    try {
      const config = {
        theme: configJson.theme || 'default',
        fontFamily: configJson.fontFamily || 'sans-serif',
        fontSize: configJson.fontSize || '16px',
        primaryColor: configJson.primaryColor || '#000000',
        legend: configJson.legend || 'title',
        isCiteStatus: configJson.isCiteStatus || false,
        isUseIndent: configJson.isUseIndent || false,
        isUseJustify: configJson.isUseJustify || false,
        customCSS: extractCustomCSS(configJson.cssContentConfig),
        // 编辑器设置
        isDark: configJson.isDark || false,
        isEditOnLeft: configJson.isEditOnLeft !== undefined ? configJson.isEditOnLeft : true,
        isMacCodeBlock: configJson.isMacCodeBlock || false,
        isShowLineNumber: configJson.isShowLineNumber || false,
        codeBlockTheme: configJson.codeBlockTheme || ''
      };
      
      return config;
    } catch (error) {
      console.error('解析配置文件失败:', error);
      return null;
    }
  }

  // 提取自定义CSS内容
  function extractCustomCSS(cssContentConfig: any): string {
    if (!cssContentConfig || !cssContentConfig.tabs || !Array.isArray(cssContentConfig.tabs)) {
      return '';
    }
    
    // 获取激活的CSS标签页内容
    const activeTab = cssContentConfig.tabs.find((tab: any) => 
      tab.name === cssContentConfig.active || tab.title === cssContentConfig.active
    );
    
    return activeTab ? activeTab.content || '' : (cssContentConfig.tabs[0]?.content || '');
  }

  // 应用样式配置到Doocs MD编辑器
  function applyStyleToEditor(styleConfig: any): boolean {
    const doocsIframe = document.getElementById('doocs-editor') as HTMLIFrameElement;
    
    if (!doocsIframe || !doocsIframe.contentWindow) {
      console.error('Doocs MD 编辑器未找到或未加载完成');
      return false;
    }
    
    try {
      const message = {
        type: 'APPLY_STYLE_CONFIG',
        config: styleConfig,
        timestamp: Date.now()
      };
      
      console.log('正在向 Doocs MD 发送样式配置...', styleConfig);
      doocsIframe.contentWindow.postMessage(message, 'https://md.doocs.org');
      
      return true;
      
    } catch (error) {
      console.error('应用样式配置失败:', error);
      return false;
    }
  }

  // 格式化配置预览
  function formatConfigPreview(config: any): string {
    const formatValue = (value: any) => {
      if (typeof value === 'boolean') return value ? '是' : '否';
      if (typeof value === 'string' && value.length > 30) return value.substring(0, 30) + '...';
      return value || '未设置';
    };

    return `
      <div>主题: <strong>${formatValue(config.theme)}</strong></div>
      <div>字体: <strong>${formatValue(config.fontFamily?.split(',')[0])}</strong></div>
      <div>字体大小: <strong>${formatValue(config.fontSize)}</strong></div>
      <div>主题色: <strong style="color: ${config.primaryColor}">${formatValue(config.primaryColor)}</strong></div>
      <div>微信外链转底部: <strong>${formatValue(config.isCiteStatus)}</strong></div>
      <div>段落首行缩进: <strong>${formatValue(config.isUseIndent)}</strong></div>
      <div>段落两端对齐: <strong>${formatValue(config.isUseJustify)}</strong></div>
      <div>自定义CSS: <strong>${config.customCSS ? '已设置' : '无'}</strong></div>
    `;
  }

  document.addEventListener('DOMContentLoaded', function() {
    console.log('=== 编辑台页面初始化 ===');
    
    // 检查 Doocs MD 编辑器
    const doocsIframe = document.getElementById('doocs-editor') as HTMLIFrameElement;
    const editorStatus = document.getElementById('editor-status');
    
    console.log('Doocs MD 编辑器:', !!doocsIframe);

    // 样式预设导入功能
    let currentStyleConfig: any = null;

    // 预设样式配置
    const STYLE_PRESETS: { [key: string]: any } = {};

    // 加载预设样式配置
    async function loadStylePreset(presetId: string): Promise<any> {
      if (STYLE_PRESETS[presetId]) {
        return STYLE_PRESETS[presetId];
      }

      try {
        const response = await fetch(`/styles/presets/${presetId}.json`);
        if (!response.ok) {
          console.error('加载预设配置失败:', response.status);
          return null;
        }

        const presetData = await response.json();
        STYLE_PRESETS[presetId] = presetData;
        return presetData;
      } catch (error) {
        console.error('解析预设配置失败:', error);
        return null;
      }
    }

    // 预设样式选择器事件
    document.getElementById('style-preset-selector')?.addEventListener('change', async function(e) {
      const presetId = (e.target as HTMLSelectElement).value;
      const applyBtn = document.getElementById('apply-preset-style') as HTMLButtonElement;
      const presetInfo = document.getElementById('preset-info');
      const presetInfoContent = document.getElementById('preset-info-content');
      
      if (!presetId) {
        if (applyBtn) applyBtn.disabled = true;
        if (presetInfo) presetInfo.style.display = 'none';
        return;
      }

      try {
        const presetData = await loadStylePreset(presetId);
        
        if (presetData) {
          currentStyleConfig = presetData.config;
          
          // 启用应用按钮
          if (applyBtn) applyBtn.disabled = false;
          
          // 显示预设信息
          if (presetInfo && presetInfoContent) {
            presetInfoContent.innerHTML = `
              📝 <strong>${presetData.name}</strong><br>
              📋 ${presetData.description}<br>
              🎨 主题: ${presetData.config.theme} | 字体: ${presetData.config.fontSize} | 颜色: <span style="color: ${presetData.config.primaryColor}">${presetData.config.primaryColor}</span>
            `;
            presetInfo.style.display = 'block';
          }
          
          console.log('预设样式配置加载成功:', presetData.name);
          
        } else {
          showNotification('加载预设样式失败', 'error');
        }
      } catch (error) {
        console.error('加载预设样式失败:', error);
        showNotification('加载预设样式失败', 'error');
      }
    });

    // 应用预设样式按钮
    document.getElementById('apply-preset-style')?.addEventListener('click', function() {
      if (!currentStyleConfig) {
        showNotification('请先选择预设样式', 'warning');
        return;
      }
      
      console.log('正在应用预设样式配置...', currentStyleConfig);
      
      const success = applyStyleToEditor(currentStyleConfig);
      
      if (success) {
        showNotification('✅ 预设样式已应用到编辑器', 'success');
      } else {
        showNotification('❌ 样式配置应用失败，请确保编辑器已加载完成', 'error');
      }
    });

    // 切换自定义导入面板
    document.getElementById('toggle-style-import')?.addEventListener('click', function() {
      const panel = document.getElementById('style-import-panel');
      if (panel) {
        panel.classList.toggle('hidden');
      }
    });

    // 文件选择事件
    document.getElementById('style-config-file')?.addEventListener('change', function(e) {
      const fileInput = e.target as HTMLInputElement;
      const file = fileInput.files?.[0];
      
      if (!file) {
        console.log('未选择文件');
        return;
      }
      
      if (!file.name.endsWith('.json')) {
        showNotification('请选择JSON格式的配置文件', 'error');
        return;
      }
      
      console.log('正在读取配置文件:', file.name);
      
      const reader = new FileReader();
      reader.onload = function(event) {
        try {
          const jsonContent = JSON.parse(event.target?.result as string);
          console.log('配置文件读取成功:', jsonContent);
          
          // 解析配置
          const parsedConfig = parseDoocsMDConfig(jsonContent);
          
          if (!parsedConfig) {
            showNotification('配置文件格式错误，解析失败', 'error');
            return;
          }
          
          currentStyleConfig = parsedConfig;
          
          // 启用按钮
          const applyBtn = document.getElementById('apply-style-config') as HTMLButtonElement;
          const previewBtn = document.getElementById('preview-style-config') as HTMLButtonElement;
          
          if (applyBtn) applyBtn.disabled = false;
          if (previewBtn) previewBtn.disabled = false;
          
          showNotification(`✅ 配置文件 "${file.name}" 解析成功`, 'success');
          
        } catch (error) {
          console.error('解析JSON文件失败:', error);
          showNotification('配置文件格式错误，无法解析', 'error');
        }
      };
      
      reader.onerror = function() {
        console.error('读取文件失败');
        showNotification('文件读取失败', 'error');
      };
      
      reader.readAsText(file);
    });

    // 预览配置按钮
    document.getElementById('preview-style-config')?.addEventListener('click', function() {
      if (!currentStyleConfig) {
        showNotification('请先选择配置文件', 'warning');
        return;
      }
      
      const previewPanel = document.getElementById('style-config-preview');
      const detailsDiv = document.getElementById('style-config-details');
      
      if (previewPanel && detailsDiv) {
        detailsDiv.innerHTML = formatConfigPreview(currentStyleConfig);
        previewPanel.classList.remove('hidden');
      }
    });

    // 应用样式配置按钮
    document.getElementById('apply-style-config')?.addEventListener('click', function() {
      if (!currentStyleConfig) {
        showNotification('请先选择配置文件', 'warning');
        return;
      }
      
      console.log('正在应用样式配置...', currentStyleConfig);
      
      const success = applyStyleToEditor(currentStyleConfig);
      
      if (success) {
        showNotification('✅ 样式配置已发送到编辑器', 'success');
      } else {
        showNotification('❌ 样式配置应用失败，请确保编辑器已加载完成', 'error');
      }
    });

    
    // 刷新编辑器按钮
    document.getElementById('refresh-editor')?.addEventListener('click', function() {
      if (doocsIframe) {
        doocsIframe.src = doocsIframe.src; // 重新加载 iframe
        if (editorStatus) {
          editorStatus.innerHTML = `
            <svg class="w-4 h-4 mr-1 animate-spin" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            编辑器重新加载中...
          `;
        }
      }
    });

    // 模板预览按钮
    document.getElementById('preview-template')?.addEventListener('click', function() {
      const template = getSelectedTemplate();
      
      // 创建模拟文章数据用于预览
      const mockArticle = {
        title: "示例文章标题 - 智能制造技术突破",
        ai_summary: "这是一个AI生成的摘要示例，展示了文章的核心内容和主要观点。",
        ai_strategic_implication: "这项技术对制造业具有重要的战略意义，可能改变行业格局。",
        ai_category: "Core Equipment",
        ai_score: 85,
        created_at: new Date().toISOString(),
        link: "https://example.com/article",
        full_content: "这里是文章的完整内容示例...",
        description: "文章描述示例",
        id: "preview-123",
        rss_sources: { name: "示例来源" }
      };
      
      // 生成预览内容
      const previewContent = generateMarkdownContent(mockArticle);
      
      // 插入预览内容到编辑器
      const success = insertContentToEditor(previewContent);
      
      if (success) {
        showNotification('✅ 模板预览已加载到编辑器', 'success');
      } else {
        showNotification('❌ 预览加载失败，请刷新页面重试', 'error');
      }
    });

    // 模板选择器变化事件 - 显示模板信息
    document.getElementById('template-selector')?.addEventListener('change', function(e) {
      const selectedTemplate = (e.target as HTMLSelectElement).value;
      const templateInfo = document.getElementById('template-info');
      const templateInfoContent = document.getElementById('template-info-content');
      
      // 检查是否是微信公众号模板
      if (selectedTemplate.startsWith('wechat-')) {
        templateInfo!.style.display = 'block';
        
        // 显示模板信息
        if (selectedTemplate === 'wechat-template1') {
          const template = WECHAT_TEMPLATES.template1;
          templateInfoContent!.innerHTML = `
            📱 <strong>${template.name}</strong> | ${template.description}<br>
            📸 包含：固定题图 + 内容结构 + 结尾两张图片 | 🎨 微信公众号标准样式
          `;
        }
      } else {
        templateInfo!.style.display = 'none';
      }
    });

    
    // iframe 加载完成事件
    doocsIframe?.addEventListener('load', function() {
      console.log('✅ Doocs MD 编辑器加载完成');
      if (editorStatus) {
        editorStatus.innerHTML = `
          <svg class="w-4 h-4 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
          </svg>
          <span class="text-green-600">编辑器就绪</span>
        `;
      }
    });
    
    // 监听来自 Doocs MD 的消息
    window.addEventListener('message', function(event) {
      // 确保消息来自 Doocs MD
      if (event.origin !== 'https://md.doocs.org') {
        return;
      }
      
      console.log('收到来自 Doocs MD 的消息:', event.data);
      
      // 处理编辑器的响应
      if (event.data.type === 'CONTENT_RECEIVED') {
        showNotification('✅ 内容已成功插入到 Doocs MD 编辑器', 'success');
      } else if (event.data.type === 'EDITOR_READY') {
        console.log('Doocs MD 编辑器已准备好接收内容');
        if (editorStatus) {
          editorStatus.innerHTML = `
            <svg class="w-4 h-4 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            <span class="text-green-600">编辑器就绪</span>
          `;
        }
      }
    });
    
    // 显示文章图片
    function displayArticleImages(article) {
      const imagesPanel = document.getElementById('images-panel');
      const imagesList = document.getElementById('images-list');
      
      // 检查是否有图片信息
      let images = [];
      if (article.crawl_metadata?.images) {
        images = article.crawl_metadata.images;
      }
      
      if (images.length > 0) {
        imagesPanel.classList.remove('hidden');
        imagesList.innerHTML = images.map((img, index) => `
          <div class="flex items-center space-x-2 p-2 bg-white rounded border hover:bg-gray-50 cursor-pointer" onclick="insertImage('${img.url}', '${img.alt}')">
            <div class="flex-shrink-0 w-8 h-8 bg-gray-200 rounded flex items-center justify-center">
              <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
            </div>
            <div class="flex-1 min-w-0">
              <div class="text-xs font-medium text-gray-900 truncate">${img.alt}</div>
              <div class="text-xs text-gray-500 truncate">${img.url.length > 40 ? img.url.substring(0, 40) + '...' : img.url}</div>
            </div>
            <div class="flex-shrink-0">
              <svg class="w-3 h-3 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
              </svg>
            </div>
          </div>
        `).join('');
      } else {
        imagesPanel.classList.add('hidden');
      }
    }

    // 插入图片到编辑器
    function insertImage(imageUrl, altText) {
      const imageMarkdown = `![${altText}](${imageUrl})`;
      
      // 尝试通过 postMessage 插入到 Doocs MD 编辑器
      const iframe = document.getElementById('doocs-editor');
      if (iframe && iframe.contentWindow) {
        try {
          iframe.contentWindow.postMessage({
            type: 'insert-text',
            text: imageMarkdown
          }, '*');
        } catch (error) {
          console.log('PostMessage failed, copying to clipboard instead');
          navigator.clipboard.writeText(imageMarkdown);
        }
      }
      
      // 显示成功提示
      const notification = document.createElement('div');
      notification.className = 'fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded-lg shadow-lg z-50';
      notification.innerHTML = `✅ 图片Markdown已复制到剪贴板<br><small>${altText}</small>`;
      document.body.appendChild(notification);
      
      setTimeout(() => {
        notification.remove();
      }, 3000);
    }

    // 将函数暴露到全局作用域
    window.insertImage = insertImage;

    // 使用文章按钮
    const useArticleBtns = document.querySelectorAll('.use-article');
    console.log('找到使用文章按钮数量:', useArticleBtns.length);
    
    useArticleBtns.forEach((btn, index) => {
      console.log(`绑定第 ${index + 1} 个按钮事件监听器`);
      
      btn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('=== 使用文章按钮被点击 ===');
        
        const articleId = (this as HTMLElement).dataset.id;
        console.log('文章 ID:', articleId);
        
        // 获取文章内容并插入到编辑器
        console.log('正在获取文章详情...');
        
        fetch(`/api/articles/${articleId}`)
          .then(response => {
            if (!response.ok) {
              throw new Error(`HTTP错误: ${response.status}`);
            }
            return response.json();
          })
          .then(result => {
            if (!result.success) {
              throw new Error(result.error || '获取文章失败');
            }
            
            const article = result.data;
            console.log('✅ 获取文章成功:', article.title);
            
            // 显示文章图片
            displayArticleImages(article);
            
            // 准备要插入编辑器的内容
            const content = generateMarkdownContent(article);
            
            console.log('准备插入内容到编辑器...');
            
            // 直接插入内容到编辑器
            const success = insertContentToEditor(content);
            
            if (success) {
              console.log('✅ 内容已发送到 Doocs MD 编辑器');
            } else {
              showNotification('❌ 插入内容失败，请刷新页面重试', 'error');
            }
            
            // 在控制台显示内容供调试
            console.log('=== 生成的Markdown内容 ===');
            console.log(content);
            console.log('=== 内容结束 ===');
            
          })
          .catch(error => {
            console.error('❌ 获取文章失败:', error);
            showNotification(`获取文章内容失败: ${error.message}`, 'error');
          });
      });
    });
    
    // 查看原文按钮
    document.querySelectorAll('.view-original').forEach(btn => {
      btn.addEventListener('click', function() {
        const url = (this as HTMLElement).dataset.url;
        if (url) {
          window.open(url, '_blank');
        }
      });
    });
  });

  // 简单的通知函数替代UIKit
  function showNotification(message: string, type: 'success' | 'error' | 'warning' = 'success') {
    const notification = document.createElement('div');
    const bgColor = type === 'success' ? 'bg-green-100 border-green-400 text-green-700' : 
                   type === 'error' ? 'bg-red-100 border-red-400 text-red-700' : 
                   'bg-yellow-100 border-yellow-400 text-yellow-700';
    
    notification.className = `fixed top-4 right-4 border px-4 py-3 rounded-lg shadow-lg z-50 max-w-sm ${bgColor}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.remove();
    }, 5000);
  }
</script>

<style>
  /* Text truncation utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Animation utilities for better UX */
  .fade-in {
    animation: fadeIn 0.3s ease-in-out;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Custom scrollbar for article list */
  .overflow-y-auto::-webkit-scrollbar {
    width: 6px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-track {
    background: #f1f5f9;
    border-radius: 3px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb {
    background: #cbd5e1;
    border-radius: 3px;
  }
  
  .overflow-y-auto::-webkit-scrollbar-thumb:hover {
    background: #94a3b8;
  }
</style>