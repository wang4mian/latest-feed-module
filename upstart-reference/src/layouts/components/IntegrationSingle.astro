---
import ReactIcons from "@/helpers/ReactIcons.astro";
import { getLocaleUrlCTM } from "@/lib/utils/languageParser";
import {
  toSentenceCase,
  markdownify,
  plainify,
} from "@/lib/utils/textConverter";
import type { InferEntrySchema } from "astro:content";
import OptimizedImage from "./utilities/OptimizedImage.astro";
import ButtonLink from "./buttons/ButtonLink.astro";
import getRelatedContent from "@/lib/utils/getRelatedContent";
import { getCollectionCTM } from "@/lib/contentParser.astro";
import IntegrationCard from "./cards/IntegrationCard.astro";

type Props = {
  content: { data: InferEntrySchema<"integration">; [key: string]: any };
  translations?: any;
};

let {
  translations: t,
  content: {
    data: { title, excerpt, image, cta_btn, fields, categories },
    render,
    collection,
  },
} = Astro.props;

const { Content } = await render();

const integrationHref = getLocaleUrlCTM("/" + collection, Astro.currentLocale);

const integrations = await getCollectionCTM(
  collection as "integration",
  Astro.currentLocale,
);

// Related Integration
const relatedIntegrations = getRelatedContent(
  integrations,
  Astro.props.content,
  ["title", "categories"],
  [],
  4,
);
---

<section>
  <div class="container">
    <div
      data-aos="fade-up-sm"
      class="has-video-modal border-primary/15 bg-primary/10 rounded-2xl border p-8 md:p-14">
      <div class="grid grid-cols-1 gap-y-12 lg:grid-cols-7 lg:items-start">
        <div class="col-span-2 space-y-8 lg:sticky lg:top-32 lg:max-w-52">
          <div class="space-y-5">
            <a
              href={integrationHref}
              class="flex items-center text-white opacity-70 transition hover:opacity-100">
              <ReactIcons icon="RxChevronLeft" class="text-xl" />
              {t("integration.back_to_integration")}
            </a>

            {
              image && (
                <div class="bg-accent flex h-36 w-full items-center justify-center rounded-xl py-4">
                  <OptimizedImage
                    src={image}
                    width={125}
                    height={125}
                    alt={"About " + plainify(title).toLowerCase()}
                    class="h-full w-full rounded-xl object-contain"
                  />
                </div>
              )
            }
            {
              cta_btn && (
                <ButtonLink
                  content={cta_btn}
                  class="btn-primary has-text-flip-animation w-full !rounded-md"
                  title={"Learn more about " + plainify(title).toLowerCase()}
                />
              )
            }
          </div>
          {
            fields && (
              <div class="divide-primary/25 space-y-4 divide-y">
                {fields.map((field) => (
                  <div class="space-y-1.5 pb-4 first:pt-0">
                    <div class="font-medium text-white" set:html={field.name} />
                    <div set:html={markdownify(field.content)} />
                  </div>
                ))}
                <div class="space-y-1.5 pb-4 first:pt-0">
                  <div
                    class="font-medium text-white"
                    set:html={t("common.category")}
                  />
                  <div class="flex flex-wrap gap-2">
                    {categories?.map((category) => (
                      <a
                        href={getLocaleUrlCTM(
                          "/" + collection + "/#" + category,
                          Astro.currentLocale,
                        )}
                        set:html={markdownify(toSentenceCase(category))}
                      />
                    ))}
                  </div>
                </div>
              </div>
            )
          }
        </div>
        <div class="col-span-5 space-y-10">
          <div>
            {title && <h2 class="h4" set:html={markdownify(title)} />}
            {excerpt && <p class="mt-4" set:html={markdownify(excerpt)} />}
          </div>
          <div class="prose-styles">
            {Content && <Content />}
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Related Integrations -->
<section>
  <div class="container space-y-12 lg:space-y-16">
    {
      title && (
        <div class="mx-auto text-center">
          <h2
            data-aos="fade-up-sm"
            class="has-italic-text capitalize"
            set:html={markdownify(
              t("integration.related_integration_section_title"),
            )}
          />
        </div>
      )
    }
    <div
      data-aos="fade-up-sm"
      data-aos-delay="200"
      class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-4">
      {
        relatedIntegrations.map((item) => (
          <IntegrationCard
            content={item.data}
            slug={item.slug}
            collection={item.collection}
          />
        ))
      }
    </div>
  </div>
</section>
