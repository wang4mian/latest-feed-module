---
import { getLocaleUrlCTM } from "@/lib/utils/languageParser";
import { markdownify } from "@/lib/utils/textConverter";

type Props = {
  tag?: "button" | "a";
  content: {
    enable?: boolean;
    label: string;
    url?: string;
    rel?: string;
    target?: string;
  };
  class?: string;
  [key: string]: any;
};

const {
  tag = "a",
  content: { enable, label, url, rel, target },
  ...rest
} = Astro.props;
---

{
  enable &&
    (tag && tag === "button" ? (
      <button
        data-content={label}
        class:list={["btn", Astro.props.class, "relative overflow-hidden"]}
        {...rest}>
        <span class="label" set:html={markdownify(label)} />
        <slot />
      </button>
    ) : (
      <a
        {...{
          // Set `rel` attribute for external urls or use provided value
          rel: url?.startsWith("http")
            ? rel || "noopener noreferrer"
            : rel || undefined,

          // Set `target` to "_blank" for external urls unless otherwise specified
          target: url?.startsWith("http")
            ? target || "_blank"
            : target || undefined,

          // Set `href` attribute
          href: url && getLocaleUrlCTM(url, Astro.currentLocale),
        }}
        data-content={label}
        class:list={["btn", Astro.props.class, "relative overflow-hidden"]}
        {...rest}>
        <span class="label" set:html={markdownify(label)} />
        <slot />
      </a>
    ))
}
