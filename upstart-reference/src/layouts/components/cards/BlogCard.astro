---
import type { Section } from "@/types";
import dateFormat from "@/lib/utils/dateFormat";
import OptimizedImage from "@/components/utilities/OptimizedImage.astro";
import { humanize, plainify, slugifyyy } from "@/lib/utils/textConverter";
import {
  getLocaleUrlCTM,
  useTranslations,
} from "@/lib/utils/languageParser.ts";
import ButtonLink from "../buttons/ButtonLink.astro";

interface Props {
  content: Section & {
    slug: string;
    collection: string;
  };
  class?: string;
}

const t = await useTranslations(Astro.currentLocale as string);

let { content, class: className, ...rest } = Astro.props;
let { title, image, date, categories } = content || {};

// Format categories
const categoriesArray = categories?.map((category: string) => ({
  name: category,
  slug: slugifyyy(category),
}));

let slug = getLocaleUrlCTM(
  content.slug,
  Astro.currentLocale,
  content.collection,
);
---

<article
  class:list={[
    "to-primary/25 rounded-lg bg-gradient-to-b from-transparent p-6 pt-0",
    className,
  ]}
  {...rest}>
  <div
    class="group after:from-primary after:via-primary/40 relative flex items-center justify-center overflow-hidden rounded-xl via-20% after:pointer-events-none after:absolute after:inset-0 after:z-10 after:bg-gradient-to-t after:transition-opacity after:duration-500 after:md:opacity-0 hover:md:after:opacity-100">
    <span
      class="text-secondary bg-primary pointer-events-none absolute z-20 flex h-16 w-16 items-center justify-center rounded-full transition duration-500 md:opacity-0 group-hover:md:opacity-100">
      <OptimizedImage
        alt="icon"
        inlineSvg={true}
        class="text-secondary h-6 w-6"
        width={24}
        height={24}
        src="/images/icons/svg/arrow-top-right.svg"
      />
    </span>
    {
      image && (
        <OptimizedImage
          src={image}
          width={800}
          height={800}
          alt={"Related to " + title?.toLowerCase()}
          class="!h-[15.625rem] min-w-full object-cover transition duration-500 group-hover:scale-105"
        />
      )
    }
    <a class="absolute inset-0 z-30" href={slug}>
      <span class="sr-only">
        {"Learn more about " + title?.toLowerCase()}
      </span>
    </a>
  </div>
  <div>
    <div
      class="font-primary text-secondary mt-6 mb-2 flex flex-wrap items-center gap-x-2.5 gap-y-px pb-3 text-sm">
      <span>{date && dateFormat(date)}</span>
      <span
        class="bg-secondary inline-block h-[0.1875rem] w-[0.1875rem] rounded-full">
      </span>

      {
        categoriesArray &&
          categoriesArray.map((category: any, index: number) => (
            <>
              <span class="text-inherit">{humanize(category.name)}</span>
              {index !== categoriesArray.length - 1 && (
                <span class="bg-secondary inline-block h-[0.1875rem] w-[0.1875rem] rounded-full" />
              )}
            </>
          ))
      }
    </div>
    {title && <h2 class="text-h5 mt-2 mb-4" set:html={plainify(title)} />}
    <ButtonLink
      class="btn-text btn-text-secondary has-icon-moving-animation"
      href={slug}
      content={{ enable: true, label: t("common.read_more") }}>
      <span
        class="icons-wrapper ms-2 inline-flex h-2.5 w-2.5 items-center justify-center">
        <span class="icon icon-before flex items-center justify-center">
          <OptimizedImage
            alt="icon"
            inlineSvg={true}
            class="h-6 w-6"
            src="/images/icons/svg/arrow-top-right.svg"
          />
        </span>
        <span
          class="icon icon-after flex items-center justify-center"
          aria-hidden="true">
          <OptimizedImage
            alt="icon"
            inlineSvg={true}
            class="h-6 w-6"
            src="/images/icons/svg/arrow-top-right.svg"
          />
        </span>
      </span>
    </ButtonLink>
  </div>
</article>
