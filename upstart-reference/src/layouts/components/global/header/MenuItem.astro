---
import type { NavigationLink } from "@/types";
import NavDropdownMenu from "@/layouts/components/global/header/DropdownMenu.astro";
import { getLocaleUrlCTM } from "@/lib/utils/languageParser.ts";

const menu = Astro.props.menu as NavigationLink;
const { pathname } = Astro.url;
---

{
  (menu.hasChildren || menu.hasMegaMenu) && menu.name ? (
    <NavDropdownMenu menu={menu} />
  ) : (
    menu.name && (
      <li class="nav-item" role="menuitem">
        <a
          {...{
            // Set `rel` attribute for external links or use provided value
            rel: menu.url?.startsWith("http")
              ? menu.rel || "noopener noreferrer"
              : menu.rel || undefined,

            // Set `target` to "_blank" for external links unless otherwise specified
            target: menu.url?.startsWith("http")
              ? menu.target || "_blank"
              : menu.target || undefined,
          }}
          target={menu.url?.startsWith("http") ? "_blank" : undefined}
          href={getLocaleUrlCTM(
            menu.url || Astro.url.origin,
            Astro.currentLocale,
          )}
          class:list={[
            "nav-link",
            {
              "nav-link-active":
                pathname === `${menu.url}/` || pathname === menu.url,
            },
          ]}>
          {menu.badge && menu.badge.enable ? (
            menu.badge.type === "dot" ? (
              <span class="relative inline-block">
                {menu.name}
                <sup
                  class:list={[
                    "badge badge-dot",
                    menu.badge.color && `badge-${menu.badge.color}`,
                  ]}
                />
              </span>
            ) : (
              <>
                {menu.name}
                <span
                  class:list={[
                    "badge",
                    menu.badge.color && `badge-${menu.badge.color}`,
                  ]}>
                  {menu.badge.label}
                </span>
              </>
            )
          ) : (
            menu.name
          )}
        </a>
      </li>
    )
  )
}
