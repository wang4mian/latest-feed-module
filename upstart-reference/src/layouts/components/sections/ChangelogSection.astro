---
import { getEntryCTM } from "@/lib/contentParser.astro";
import overrideObjects from "@/lib/utils/overrideObjects.ts";
import { markdownify } from "@/lib/utils/textConverter";
import AccordionList from "@/layouts/components/widgets/AccordionList.astro";
import type { ChangelogEntry, Section } from "@/types";
import Subtitle from "@/layouts/components/widgets/Subtitle.astro";
import OptimizedImage from "@/components/utilities/OptimizedImage.astro";
import VideoModal from "@/layouts/components/widgets/VideoModal.astro";
import ReactIcons from "@/helpers/ReactIcons.astro";

// Type for this section data
type changelog_section_type = Section & {
  list?: ChangelogEntry[];
  show_categories?: boolean;
};
type Props = {
  content?: changelog_section_type;
};

// Fetching the default content for the this section
let default_content = (
  await getEntryCTM("sections", "changelog-section", Astro.currentLocale)
)?.data as changelog_section_type;

// Enables content customization (e.g., title, description) with a fallback to 'default_content' if not provided.
// The 'content' prop should match the structure of 'default_content'.
// Allows using this section with different content across multiple pages.
// If 'content' is missing, 'default_content' will be used.
let actual_content = overrideObjects(
  { ...default_content },
  Astro.props.content,
) as changelog_section_type;

// Extracting required values from 'content' object
let {
  enable = true,
  title,
  subtitle,
  list,
} = actual_content as changelog_section_type;
---

{
  enable && (
    <section>
      <div class="container">
        <div class="space-y-12 md:space-y-16">
          <div class="mx-auto max-w-2xl text-center" data-aos="fade-up-sm">
            <Subtitle content={subtitle} />
            {title && (
              <h2
                class="has-italic-text text-white capitalize"
                set:html={markdownify(title)}
              />
            )}
          </div>
          {list && (
            <div
              data-aos="fade-up-sm"
              data-aos-delay="200"
              class="has-video-modal border-primary/15 bg-primary/10 rounded-2xl border p-8 md:p-14">
              {list.map((changelog, changelogIndex) => (
                <div class="after:bg-primary/15 relative flex flex-col gap-4 pb-20 after:absolute after:top-0 after:h-full after:w-[2px] after:content-[''] last:pb-0 after:max-lg:-left-px lg:flex-row after:lg:left-40">
                  <div class="after:bg-primary after:ring-primary/25 relative w-full max-w-40 space-y-2 after:absolute after:top-4 after:size-3.5 after:rounded-full after:ring-4 after:content-[''] max-lg:ps-10 after:max-lg:-left-2 lg:pe-16 after:lg:-right-2">
                    {changelog.version && (
                      <p
                        class="text-secondary mt-3 text-xl font-medium"
                        set:html={markdownify(changelog.version)}
                      />
                    )}
                    {changelog.date && (
                      <p
                        class="text-sm"
                        set:html={markdownify(changelog.date)}
                      />
                    )}
                  </div>

                  <div class="flex-1 space-y-8 ps-10 lg:space-y-16 lg:ps-16">
                    <div>
                      {changelog.title && (
                        <h2
                          class="h4 mt-1.5"
                          set:html={markdownify(changelog.title)}
                        />
                      )}
                      {changelog.types && (
                        <div class="mt-8 flex flex-wrap gap-x-3 gap-y-3 lg:gap-x-6">
                          {changelog.types.map((item) => (
                            <div class="from-primary/20 to-bg-primary/10 text-light flex items-center gap-3 rounded-full bg-gradient-to-r py-1 ps-2.5 pe-5">
                              <OptimizedImage
                                inlineSvg={true}
                                src={item.icon}
                                alt="icon"
                                class="text-primary"
                              />
                              {markdownify(item.label)}
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                    {changelog.content && (
                      <div
                        class="prose-styles"
                        set:html={markdownify(changelog.content)}
                      />
                    )}
                    {changelog.video && (
                      <div class="relative">
                        <OptimizedImage
                          width={900}
                          height={400}
                          src={changelog.video.poster}
                          alt={
                            "video thumbnail related to" +
                            markdownify(changelog.title.toLocaleLowerCase())
                          }
                          class="!h-72 w-full !max-w-full rounded-2xl object-cover md:!h-96"
                        />
                        {changelog.video.src && (
                          <>
                            <button
                              type="button"
                              title="Play Video"
                              aria-haspopup="dialog"
                              aria-expanded="false"
                              aria-controls={
                                "#" + changelog.video.id + changelogIndex
                              }
                              data-hs-overlay={
                                "#" + changelog.video.id + changelogIndex
                              }
                              data-hs-overlay-options={`{"emulateScrollbarSpace" : true}`}
                              class="video-modal-toggle translate-centered has-animated-waves absolute flex h-20 w-20 items-center justify-center rounded-full transition-transform duration-300 hover:scale-110">
                              <div class="relative z-10 flex h-20 w-20 items-center justify-center rounded-full">
                                <ReactIcons
                                  icon="IoPlaySharp"
                                  class="icon text-3xl"
                                />
                              </div>
                            </button>
                            <VideoModal
                              video={{
                                id: changelog.video.id + changelogIndex,
                                src: changelog.video.src,
                                provider: changelog.video.provider,
                              }}
                            />
                          </>
                        )}
                      </div>
                    )}
                    {changelog.changes && (
                      <AccordionList
                        role="tabpanel"
                        changelogContent={true}
                        content={changelog.changes}
                        class:list={["col-span-5 space-y-5 xl:col-span-6"]}
                        id={"tab-1-" + changelogIndex}
                        tabIndex={"group-1-" + changelogIndex}
                        aria-labelledby={"tab-item-1-" + changelogIndex}
                      />
                    )}
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      </div>
    </section>
  )
}
