---
import Subtitle from "@/layouts/components/widgets/Subtitle.astro";
import type { Button, Section } from "@/types";
import { getEntryCTM } from "@/lib/contentParser.astro";
import overrideObjects from "@/lib/utils/overrideObjects.ts";
import OptimizedImage from "@/components/utilities/OptimizedImage.astro";
import { markdownify } from "@/lib/utils/textConverter";
import ButtonLink from "../buttons/ButtonLink.astro";
import ReactIcons from "@/helpers/ReactIcons.astro";

// Type for this section data
type why_us_section_type = Section & {
  layout_type?: "modern" | "creative";
  list: {
    title: string;
    title_size: string;
    image?: string;
    description_font_size?: "sm" | "lg";
    description: string;
    cta_btn: Button;
    bounced_content?: {
      enable: boolean;
      bg_image: string;
      list: string[];
    };
  }[];
};
type Props = {
  content?: why_us_section_type;
};

// Fetching the default content for the this section
let default_content = (
  await getEntryCTM("sections", "why-us", Astro.currentLocale)
)?.data as why_us_section_type;

// Enables content customization (e.g., title, description) with a fallback to 'default_content' if not provided.
// The 'content' prop should match the structure of 'default_content'.
// Allows using this section with different content across multiple pages.
// If 'content' is missing, 'default_content' will be used.
let actual_content = overrideObjects(
  { ...default_content },
  Astro.props.content,
) as why_us_section_type;

// Extracting required values from 'content' object
let {
  enable = true,
  title,
  subtitle,
  layout_type = "creative",
  list,
} = actual_content as why_us_section_type;

const isModernLayout = layout_type === "modern";
---

{
  enable && (
    <section class="relative">
      <div class="container space-y-12 md:space-y-16">
        <div
          class="mx-auto shrink-0 text-center lg:max-w-2xl"
          data-aos="fade-up-sm">
          <Subtitle content={subtitle} />
          {title && (
            <h2
              class="has-italic-text capitalize"
              set:html={markdownify(title)}
            />
          )}
        </div>
        <div
          class="grid gap-14 lg:grid-cols-2"
          data-aos="fade-up-sm"
          data-aos-delay="200">
          {list.map((item, index) => {
            const isFullWidth = (index + 1) % 3 === 0;
            const isEven = index % 2 !== 0 && !isFullWidth;
            const isOdd = index % 2 === 0 && !isFullWidth;

            return (
              <div
                class:list={[
                  {
                    "bg-[linear-gradient(82.48deg,_theme(colors.primary/0%)_-1.1%,_theme(colors.primary/36%)_96.45%)] lg:col-span-2 lg:grid-cols-2":
                      isFullWidth,
                    "xl:pt-20": isFullWidth && !isModernLayout,
                    "bg-[linear-gradient(30deg,_theme(colors.primary/2%)_20%,_theme(colors.primary/80%)_100%)]":
                      isEven,
                    "bg-[linear-gradient(-20deg,theme(colors.primary/35%),theme(colors.body))]":
                      isOdd,
                    "xl:pl-20": isEven && !isModernLayout,
                    "xl:pr-20": isOdd && !isModernLayout,
                    "px-8 py-10 xl:px-12 xl:py-16": isModernLayout,
                  },
                  "grid overflow-hidden rounded-3xl",
                ]}>
                <div
                  class:list={[
                    {
                      "max-lg:order-2 md:flex md:flex-col md:justify-center":
                        isFullWidth,
                    },
                    {
                      "order-1": isOdd,
                      "order-1 mt-auto h-fit lg:order-2": isEven,
                      "mb-10 lg:mb-16": isOdd && isModernLayout,
                      "lg:text-end": isEven && !isModernLayout,
                      "px-8 py-10 lg:px-10 lg:py-10 xl:px-16 xl:py-16":
                        !isModernLayout,
                    },
                  ]}>
                  {item.title && (
                    <h3
                      class:list={[
                        "prose-strong:font-medium prose-strong:text-secondary mb-8",
                        {
                          "text-h4/relaxed": item.title_size === "sm",
                        },
                      ]}
                      set:html={markdownify(item.title)}
                    />
                  )}
                  {item.description && (
                    <div
                      class="prose-styles"
                      set:html={markdownify(item.description, true)}
                    />
                  )}
                  {item.cta_btn?.enable && (
                    <div class="mt-2">
                      <ButtonLink
                        class="btn-md has-icon-moving-animation flex w-fit flex-row-reverse items-center gap-5 rounded-none p-0 text-white"
                        content={item.cta_btn}>
                        <span class="bg-primary icons-wrapper icons-wrapper inline-flex h-12 w-12 items-center justify-center rounded-full">
                          <span class="icon icon-before flex items-center justify-center">
                            <ReactIcons
                              icon="RxArrowTopRight"
                              class="text-2xl"
                            />
                          </span>
                          <span
                            class="icon icon-after flex items-center justify-center"
                            aria-hidden="true">
                            <ReactIcons
                              icon="RxArrowTopRight"
                              class="text-2xl"
                            />
                          </span>
                        </span>
                      </ButtonLink>
                    </div>
                  )}
                </div>

                {/* Images */}
                <div
                  class:list={[
                    "relative overflow-hidden",
                    {
                      "mb-auto h-fit max-lg:mt-10 lg:mb-16 xl:mb-0":
                        isEven && isModernLayout,
                      // Right Side Image
                      "order-2": isOdd,
                      // Left Side Image
                      "order-2 lg:order-1": isEven,
                      "max-lg:order-2 max-lg:mb-10": isFullWidth,
                    },
                  ]}>
                  {item.image ? (
                    <OptimizedImage
                      src={item.image}
                      class:list={[
                        "min-w-full",
                        {
                          "rounded-bl-3xl lg:object-left-bottom":
                            isEven && !isModernLayout,
                          "rounded-tr-3xl lg:object-right-top":
                            isOdd && !isModernLayout,
                          "h-[200px] object-cover object-top md:min-h-full lg:object-cover":
                            !isFullWidth && !isModernLayout,
                          "h-[200px] rounded-xl object-cover object-top md:h-[300px]":
                            isModernLayout && !isFullWidth,
                          "mx-auto block h-[200px] w-auto !object-contain md:h-full md:h-[350px]":
                            isFullWidth,
                        },
                      ]}
                    />
                  ) : (
                    item.bounced_content?.bg_image && (
                      <div class="relative min-h-full p-5">
                        <OptimizedImage
                          src={item.bounced_content?.bg_image}
                          class:list={[
                            "pointer-events-none absolute inset-0 size-full min-h-full rounded-tl-3xl object-cover",
                          ]}
                        />
                        <div class="draggable-wrapper relative h-full min-h-72 w-full overscroll-contain md:min-h-96">
                          {item.bounced_content?.list.map((item) => (
                            <div
                              class="draggable bg-primary/50 absolute w-fit cursor-grab rounded-full px-5 py-2 text-sm font-medium whitespace-nowrap text-white select-none md:text-lg"
                              set:html={markdownify(item)}
                            />
                          ))}
                        </div>
                      </div>
                    )
                  )}
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </section>
  )
}

<script>
  import draggable from "@/lib/utils/draggable";

  draggable();
</script>
